/*
	Sprite definitions
	binary definition of map
	ABCD
	A == 1 allow movement
	A == 0 denied movement
	B == 0 item (items will only change score and sprite if allow movement)
		CD = 00 empty
		CD = 10 wall
		CD = 01 small dot
		CD = 11 big dot
	B == 1 entity (entities will be able to toggle movement)
		CD == 00 pacman spawn
		CD == 10 enemy spawn
		CD == 01 enemy door
		CD == 11 reserve
*/
var a = [
	"0000000000000000000000000000",
	"0111111111111001111111111110",
	"0100001000001001000001000010",
	"0100001000001001000001000010",
	"0100001000001001000001000010",
	"0111111111111111111111111110",
	"0100001001000000001001000010",
	"0100001001000000001001000010",
	"0111111001111001111001111110",
	"0000001000001001000001000000",
	"0000001000001001000001000000",
	"0000001001111111111001000000",
	"0000001001000000001001000000",
	"0000001001011111101001000000",
	"1111111111011111101111111111",
	"0000001001011111101001000000",
	"0000001001000000001001000000",
	"0000001001111111111001000000",
	"0000001001000000001001000000",
	"0000001001000000001001000000",
	"0111111111111001111111111110",
	"0100001000001001000001000010",
	"0100001000001001000001000010",
	"0111001111111111111111001110",
	"0001001001000000001001001000",
	"0001001001000000001001001000",
	"0111111001111001111001111110",
	"0100000000001001000000000010",
	"0100000000001001000000000010",
	"0111111111111111111111111110",
	"0000000000000000000000000000"	
]
var b = [
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000110000000000000",
	"0000000000011111100000000000",
	"0000000000011111100000000000",
	"0000000000011111100000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000110000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000",
	"0000000000000000000000000000"
];
var cd = [
	"1111111111111111111111111111",
	"1222222222222112222222222221",
	"1211112111112112111112111121",
	"1310012100012112100012100131",
	"1211112111112112111112111121",
	"1222222222222222222222222221",
	"1211112112111111112112111121",
	"1211112112111111112112111121",
	"1222222112222112222112222221",
	"1111112111110110111112111111",
	"0000012111110110111112100000",
	"0000012110000000000112100000",
	"0000012110111221110112100000",
	"1111112110111111110112111111",
	"0000002000111111110002000000",
	"1111112110111111110112111111",
	"0000012110111111110112100000",
	"0000012110000000000112100000",
	"0000012110111111110112100000",
	"1111112110111111110112111111",
	"1222222222222112222222222221",
	"1211112111112112111112111121",
	"1211112111112112111112111121",
	"1222112222222002222222112221",
	"1112112112111111112112112111",
	"1112112112111111112112112111",
	"1222222112222112222112222221",
	"1211111111112112111111111121",
	"1211111111112112111111111121",
	"1222222222222222222222222221",
	"1111111111111111111111111111"	
]
var map = [];
for(var y=0;y<a.length;y++) {
	var string = "";
	console.log(y);
	for(var x=0;x<a[y].length;x++) {
		var num = parseInt(a[y][x]);
		num += parseInt(b[y][x]) && 2;
		num += parseInt(cd[y][x]) & 1 && 4;
		num += parseInt(cd[y][x]) & 2 && 8;
		string+=num.toString(16);
	}
	console.log(string);
	map[y] = string;
}
console.log(map); // console log array of strings representing hex values
/* Results:
[
        '4444444444444444444444444444',
        '4999999999999449999999999994',
        '4944449444449449444449444494',
        '4d400494000494494000494004d4',
        '4944449444449449444449444494',
        '4999999999999999999999999994',
        '4944449449444444449449444494',
        '4944449449444444449449444494',
        '4999999449999449999449999994',
        '4444449444441441444449444444',
        '0000049444441441444449400000',
        '0000049441111111111449400000',
        '0000049441444aa4441449400000',
        '4444449441477777741449444444',
        '1111119111477777741119111111',
        '4444449441477777741449444444',
        '0000049441444444441449400000',
        '0000049441111111111449400000',
        '0000049441444444441449400000',
        '4444449441444444441449444444',
        '4999999999999449999999999994',
        '4944449444449449444449444494',
        '4944449444449449444449444494',
        '4999449999999339999999449994',
        '4449449449444444449449449444',
        '4449449449444444449449449444',
        '4999999449999449999449999994',
        '4944444444449449444444444494',
        '4944444444449449444444444494',
        '4999999999999999999999999994',
        '4444444444444444444444444444'
]
*/